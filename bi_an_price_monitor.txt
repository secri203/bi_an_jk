// ==UserScript==
// @name         Binance alpha 价格监控助手
// @namespace    http://tampermonkey.net/
// @version      4.3
// @description  Binance alpha 价格监控助手，支持电脑端、手机端
// @author       Grok（微信：qf20210110）
// @github       https://github.com/secri203/bi_an_jk
// @match        https://www.binance.com/zh-CN/alpha/*
// @grant        GM_xmlhttpRequest
// @connect      101.33.234.249
// ==/UserScript==

(function() {
    'use strict';

    // 存储所有定时器ID
    const timerIds = {
        updateTimer: null,
        protectTimer: null
    };

    // 存储最后一次预警时间
    let lastAlertTime = null;
    const ALERT_INTERVAL = 5 * 60 * 1000; // 5分钟的毫秒数

    // 密码设置
    const EXIT_PASSWORD = "123";

    // 1. 强制创建覆盖层（完全复现图片样式）
    const overlay = document.createElement('div');
    overlay.id = 'myx-absolute-overlay';
    overlay.style.cssText = `
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        background: #000 !important;
        display: flex !important;
        flex-direction: column !important;
        justify-content: center !important;
        align-items: center !important;
        z-index: 2147483647 !important;
    `;

    // 2. MYX价格显示（严格按图片样式）
    const priceDisplay = document.createElement('div');
    priceDisplay.id = 'myx-main-price';
    priceDisplay.style.cssText = `
        font-size: 72px !important;
        color: #F0B90B !important;
        margin-bottom: 20px !important;
        font-weight: 700 !important;
        visibility: visible !important;
        opacity: 1 !important;
        transition: color 0.3s ease !important;
    `;
    priceDisplay.textContent = 'MYX';

    // 3. 时间显示（严格按图片格式）
    const timeDisplay = document.createElement('div');
    timeDisplay.id = 'myx-time-stamp';
    timeDisplay.style.cssText = `
        font-size: 16px !important;
        color: #848E9C !important;
        margin-bottom: 40px !important;
        visibility: visible !important;
    `;

    // 4. 按钮（完全复现图片）
    const hideBtn = document.createElement('button');
    hideBtn.textContent = '退出手机屏保';
    hideBtn.style.cssText = `
        background: #2B3139 !important;
        color: #EAECEF !important;
        border: none !important;
        padding: 8px 16px !important;
        border-radius: 4px !important;
        cursor: pointer !important;
        font-size: 14px !important;
    `;

    // 创建密码输入弹窗
    function createPasswordModal() {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) !important;
            background: #1E2329 !important;
            padding: 20px !important;
            border-radius: 8px !important;
            z-index: 2147483647 !important;
            display: flex !important;
            flex-direction: column !important;
            align-items: center !important;
            box-shadow: 0 0 20px rgba(0,0,0,0.5) !important;
        `;

        const title = document.createElement('div');
        title.textContent = '请输入退出密码';
        title.style.cssText = `
            color: #EAECEF !important;
            font-size: 18px !important;
            margin-bottom: 15px !important;
        `;

        const input = document.createElement('input');
        input.type = 'password';
        input.style.cssText = `
            width: 200px !important;
            padding: 8px 12px !important;
            margin-bottom: 15px !important;
            background: #2B3139 !important;
            border: 1px solid #474D57 !important;
            border-radius: 4px !important;
            color: #EAECEF !important;
            font-size: 14px !important;
        `;

        const btnContainer = document.createElement('div');
        btnContainer.style.cssText = `
            display: flex !important;
            gap: 10px !important;
        `;

        const confirmBtn = document.createElement('button');
        confirmBtn.textContent = '确认';
        confirmBtn.style.cssText = `
            background: #F0B90B !important;
            color: #000 !important;
            border: none !important;
            padding: 8px 16px !important;
            border-radius: 4px !important;
            cursor: pointer !important;
            font-size: 14px !important;
        `;

        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = '取消';
        cancelBtn.style.cssText = `
            background: #2B3139 !important;
            color: #EAECEF !important;
            border: none !important;
            padding: 8px 16px !important;
            border-radius: 4px !important;
            cursor: pointer !important;
            font-size: 14px !important;
        `;

        confirmBtn.onclick = function() {
            if (input.value === EXIT_PASSWORD) {
                // 清除所有定时器
                clearInterval(timerIds.updateTimer);
                clearInterval(timerIds.protectTimer);
                timerIds.updateTimer = null;
                timerIds.protectTimer = null;

                // 移除事件监听器
                document.removeEventListener('visibilitychange', ironcladUpdate);
                window.removeEventListener('focus', ironcladUpdate);

                // 移除覆盖层
                if (overlay && overlay.parentNode) {
                    overlay.parentNode.removeChild(overlay);
                }

                // 移除密码弹窗
                document.body.removeChild(modal);
            } else {
                alert('密码错误！');
                input.value = '';
                input.focus();
            }
        };

        cancelBtn.onclick = function() {
            document.body.removeChild(modal);
        };

        btnContainer.appendChild(confirmBtn);
        btnContainer.appendChild(cancelBtn);

        modal.appendChild(title);
        modal.appendChild(input);
        modal.appendChild(btnContainer);

        document.body.appendChild(modal);
        input.focus();
    }

    // 修改按钮点击事件：先弹出密码输入框
    hideBtn.onclick = createPasswordModal;

    // 组装元素
    overlay.appendChild(priceDisplay);
    overlay.appendChild(timeDisplay);
    overlay.appendChild(hideBtn);
    document.body.appendChild(overlay);

    // 新增阈值显示行
    const thresholdDisplay = document.createElement('div');
    thresholdDisplay.id = 'myx-threshold-display';
    thresholdDisplay.style.cssText = `
        font-size: 16px !important;
        color: #848E9C !important;
        margin-bottom: 20px !important;
        visibility: visible !important;
    `;
    overlay.insertBefore(thresholdDisplay, timeDisplay);

    // 获取token名称
    const div = document.querySelector('div.text-PrimaryText');
    let tokenName = '';

    if (!div) {
        const allDivs = document.getElementsByTagName('div');
        for (let d of allDivs) {
            if (d.className.includes('text-PrimaryText')) {
                tokenName = d.textContent;
                break;
            }
        }
    } else {
        tokenName = div.textContent;
    }

    // 全局变量存储价格阈值
    let maxPrice = null;
    let minPrice = null;

    // 从API获取监控价格
    function fetchMonitorPrices() {
        GM_xmlhttpRequest({
            method: 'POST',
            url: 'http://101.33.234.249:8000/query_monitor_price',
            headers: {
                'Content-Type': 'application/json'
            },
            data: JSON.stringify({ token_name: tokenName }),
            onload: function(response) {
                try {
                    const data = JSON.parse(response.responseText);
                    if (data.success) {
                        maxPrice = parseFloat(data.data.max_prices[0]);
                        minPrice = parseFloat(data.data.min_prices[0]);
                    }
                } catch (e) {
                    console.error('解析API响应失败:', e);
                }
            },
            onerror: function(error) {
                console.error('获取监控价格失败:', error);
            }
        });
    }

    // 发送价格预警
    function sendPriceAlert(price) {
        const now = Date.now();
        // 检查是否在5分钟内已经发送过预警
        if (lastAlertTime && (now - lastAlertTime) < ALERT_INTERVAL) {
            return;
        }

        GM_xmlhttpRequest({
            method: 'POST',
            url: 'http://101.33.234.249:8000/price_alert',
            headers: {
                'Content-Type': 'application/json'
            },
            data: JSON.stringify({
                token_name: tokenName,
                price: price
            }),
            onload: function(response) {
                try {
                    const data = JSON.parse(response.responseText);
                    if (data.success) {
                        lastAlertTime = now;
                        console.log('价格预警发送成功');
                    }
                } catch (e) {
                    console.error('发送价格预警失败:', e);
                }
            },
            onerror: function(error) {
                console.error('发送价格预警失败:', error);
            }
        });
    }

    // 更新函数
    function ironcladUpdate() {
        const allElements = document.querySelectorAll('*');
        let currentPrice = null;

        for (let el of allElements) {
            if (el.textContent.includes('$') && el.textContent.match(/\d+\.\d+/)) {
                currentPrice = parseFloat(el.textContent.match(/\d+\.\d+/)[0]);
                priceDisplay.textContent = `${tokenName}: ${currentPrice.toFixed(6)}`;

                if (maxPrice !== null && minPrice !== null) {
                    if (currentPrice > maxPrice) {
                        priceDisplay.style.color = '#0ECB81';
                        // 发送价格过高预警
                        sendPriceAlert(currentPrice);
                    } else if (currentPrice < minPrice) {
                        priceDisplay.style.color = '#F6465D';
                        // 发送价格过低预警
                        sendPriceAlert(currentPrice);
                    } else {
                        priceDisplay.style.color = '#F0B90B';
                    }
                }
                break;
            }
        }

        if (maxPrice !== null && minPrice !== null) {
            thresholdDisplay.textContent = `max: ${maxPrice.toFixed(4)}   min: ${minPrice.toFixed(4)}`;
        }

        const now = new Date();
        timeDisplay.textContent =
            `${now.getFullYear()}/${String(now.getMonth()+1).padStart(2,'0')}/${String(now.getDate()).padStart(2,'0')} ` +
            `${String(now.getHours()).padStart(2,'0')}:${String(now.getMinutes()).padStart(2,'0')}:${String(now.getSeconds()).padStart(2,'0')}`;
    }

    // 启动定时器并存储ID
    timerIds.updateTimer = setInterval(ironcladUpdate, 1000);
    timerIds.protectTimer = setInterval(() => {
        if (!document.getElementById('myx-absolute-overlay')) {
            document.body.appendChild(overlay);
        }
    }, 2000);

    // 添加事件监听器
    document.addEventListener('visibilitychange', ironcladUpdate);
    window.addEventListener('focus', ironcladUpdate);

    // 初始执行
    fetchMonitorPrices();
    ironcladUpdate();
})();
